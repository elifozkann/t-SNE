# Kütüphanelerin içe aktarılması
import pandas as pd 
import plotly.express as px 
import matplotlib.pyplot as plt 
from sklearn.datasets import load_digits
from sklearn.manifold import TSNE 

# Verilerin yüklenemsi 
digits = load_digits()

X, y = load_digits(return_X_y=True)
# Verilerin X ve y dizilerine ayrılması
# t-SNE uygulanmadan önceki boyutlarının yazdırılması
print('Shape of digit images: ', digits.images.shape)
print('Shape of X (training data): ', X.shape)
print('Shape of y (true labels): ', y.shape)

# t-SNE uygulanması
embed = TSNE(n_components=2, perplexity=10, n_iter=5000)

# x'i dönüştürme
X_embedded = embed.fit_transform(X)

# Sonuçların yazdırılması
print('New Shape of X: ', X_embedded.shape)
print('Kullback-Leibler divergence after optimization: ', embed.kl_divergence_)
print('No. of iterations: ', embed.n_iter_)

# Dağılım grafiğinin oluşturulması
fig = px.scatter(None, x=X_embedded[:,0], y=X_embedded[:,1], 
                 labels={"x": "Dimension 1","y": "Dimension 2",},
                 opacity=1, color=y.astype(str))

fig.update_xaxes(showgrid=True, gridwidth=1, gridcolor='lightgrey', 
                zeroline=True, zerolinewidth=1, zerolinecolor='lightgrey', 
                 showline=True, linewidth=1, linecolor='black')

fig.update_yaxes(showgrid=True, gridwidth=1, gridcolor='lightgrey', 
                 zeroline=True, zerolinewidth=1, zerolinecolor='lightgrey', 
                 showline=True, linewidth=1, linecolor='black')
fig.update_layout(title_text="t-SNE")
fig.update_traces(marker=dict(size=3))
fig.show()
